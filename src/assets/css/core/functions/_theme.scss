//
// Theme Variables
//
$ui-theme-key: null !global;
$ui-theme-target: null !global;
$ui-context-key: null !global;
$ui-context-target: null !global;

@mixin ui-theme($key: $ui-theme-default) {
  $ui-theme-key: $key !global;
  $ui-theme-target: map-get($ui-theme, $key) !global;
  @if & == null {
    .#{$css-prefix}theme--#{$key} {
      @content;
    }
  } @else {
    .#{$css-prefix}theme--#{$key} & {
      @content;
    }
  }
  $ui-theme-key: null !global;
  $ui-theme-target: null !global;
}

@mixin ui-each-themes($at-root: false) {
  @each $key, $theme in $ui-theme {
    $ui-theme-key: $key !global;
    $ui-theme-target: $theme !global;
    @if $key == $ui-theme-default {
      @content;
    } @else {
      @if & == null or $at-root {
        .#{$css-prefix}theme--#{$key} {
          @content;
        }
      } @else {
        .#{$css-prefix}theme--#{$key} & {
          @content;
        }
      }
    }
  }
  $ui-theme-key: null !global;
  $ui-theme-target: null !global;
}

@mixin ui-theme-color($prop, $key-map, $prefix: "", $suffix: "") {
  @include ui-each-themes {
    $color: map-deep-get($ui-theme-target, $key-map);
    @if $color == null {
      @warn "[ui-theme-color] #{$key-map} is not defined.";
    } @else {
      #{$prop}: #{$prefix}$color#{$suffix};
    }
  }
}

@function ui-get-mixin-child-base($base: &) {
  $for-root: false;
  @if $base == null {
    $for-root: true;
  } @else {
    @if length($base) == 1 {
      $tmp: nth($base, 1);
      @if ($tmp == body) {
        $for-root: true;
      } @else {
        @if type-of($tmp == list and length($tmp) == 1 and nth($tmp, 1) == body) {
          $for-root: true;
        }
      }
    }
  }

  @return if($for-root, "", $base);
}

@mixin ui-theme-text($key, $important: false) {
  $child-base: ui-get-mixin-child-base();
  @include ui-each-themes {
    $context: map-deep-get($ui-theme-target, "context." + $key);
    color: map-get($context, text) if($important, !important, null);
  }
}

@mixin ui-theme-background($key, $important: false) {
  $child-base: ui-get-mixin-child-base();
  @include ui-each-themes {
    $context: map-deep-get($ui-theme-target, "context." + $key);
    background: map-get($context, base) if($important, !important, null);
  }
}

@mixin ui-theme-border-color($key, $important: false) {
  $child-base: ui-get-mixin-child-base();
  @include ui-each-themes {
    $context: map-deep-get($ui-theme-target, "context." + $key);
    border-color: map-get($context, base) if($important, !important, null);
  }
}

@mixin ui-theme-context($key, $flat: false, $outline: false) {
  $fill: $flat == false and $outline == false;
  $child-base: ui-get-mixin-child-base();

  @include ui-each-themes {
    $context: map-deep-get($ui-theme-target, "context." + $key);

    @if $fill {
      background: map-get($context, base);
      border-color: map-get($context, base);
      color: map-get($context, doc);

      @at-root #{$child-base} a {
        // &,
        // &:hover,
        // &:focus,
        // &:active {}
        // @debug $context;
        color: map-get($context, link);
      }
    }

    @if $flat {
      color: map-get($context, text);
    }

    @if $outline {
      color: map-get($context, base);
      border-color: map-get($context, base);
    }
  }
}
