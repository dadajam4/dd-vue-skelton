//
// Theme Variables
//

$ui-theme-base: light !default;
$ui-theme-default: light !default;

$ui-theme-context-mapping-default: plain !default;
$ui-theme-context-mapping-primary: primary !default;
$ui-theme-context-mapping-error: error !default;
// $ui-theme-context-mapping-warning: warning !default;
$ui-theme-context-mapping-disabled: disabled !default;
$ui-theme-context-mapping-soft: light-grey !default;
$ui-theme-context-mapping-touch: grey !default;
$ui-theme-context-mapping-deep: darken !default;
$ui-theme-context-mapping-caption: caption !default;
$ui-theme-context-mapping-sub: grey !default;
$ui-theme-context-mapping-track: light-mask !default;
$ui-theme-context-mapping-track-active: mask !default;

$ui-theme-context-mapping: (
  default: $ui-theme-context-mapping-default,
  primary: $ui-theme-context-mapping-primary,
  error: $ui-theme-context-mapping-error,
  // warning: $ui-theme-context-mapping-warning,
  disabled: $ui-theme-context-mapping-disabled,
  soft: $ui-theme-context-mapping-soft,
  touch: $ui-theme-context-mapping-touch,
  deep: $ui-theme-context-mapping-deep,
  caption: $ui-theme-context-mapping-caption,
  sub: $ui-theme-context-mapping-sub,
  track: $ui-theme-context-mapping-track,
  track-active: $ui-theme-context-mapping-track-active,
);

$ui-theme: (
  light: (
    background: rgba(250, 250, 250, 1),
    backdrop: rgba(0, 0, 0, .4),
    divider: rgba(0, 0, 0, .12),
    form-divider: rgba(0, 0, 0, .22),
    switch-track: rgba(0, 0, 0, .38),
    switch-pointer: #fafafa,
    spinner-underlay-stroke: rgba(#000, 0.1),
    highlight: ui-get-palette(yellow),
    context-doc-dark: rgba(0, 0, 0, .87),
    context-doc-light: #fff,
    context-autodoc-threshold: 70%,
    context: (
      plain: (
        base: #fff,
        link: #42b983,
      ),
      light-grey: (
        base: ui-get-palette(grey-lighten-3),
        link-weight: bold,
      ),
      "grey": (
        base: ui-get-palette(grey),
        link-weight: bold,
      ),
      dark: (
        base: ui-get-palette(grey-darken-2),
        link-weight: bold,
      ),
      darken: (
        base: ui-get-palette(grey-darken-4),
        link-weight: bold,
      ),
      primary: (
        base: #42b983,
        link-weight: bold,
      ),
      secondary: (
        base: #2c3e50,
        link-weight: bold,
      ),
      caption: (
        base: #2c3e50,
        link-weight: bold,
      ),
      info: (
        base: #2196f3,
        link-weight: bold,
      ),
      success: (
        base: #4caf50,
        link-weight: bold,
      ),
      warning: (
        base: #ffc107,
        link-weight: bold,
      ),
      error: (
        base: #ff5252,
        link-weight: bold,
      ),
      disabled: (
        base: rgba(0, 0, 0, .12),
      ),
      sub: (
        base: ui-get-palette(grey),
        link-weight: bold,
      ),
      holiday: (
        base: ui-get-palette(red-accent-1),
        link-weight: bold,
      ),
      light-mask: (
        base: rgba(0, 0, 0, .12),
        link-weight: bold,
      ),
      mask: (
        base: rgba(0, 0, 0, .2),
        link-weight: bold,
      ),
      deep-mask: (
        base: rgba(0, 0, 0, .7),
        link-weight: bold,
      ),
    ),
  ),
  dark: (
    background: rgba(19, 19, 19, 1),
    // backdrop: rgba(0, 0, 0, .4),
    divider: rgba(255, 255, 255, .12),
    form-divider: rgba(255, 255, 255, .22),
    switch-track: rgba(255, 255, 255, .38),
    // switch-pointer: #fafafa,
    spinner-underlay-stroke: rgba(#fff, 0.1),
    // highlight: ui-get-palette(yellow),
    // context-doc-dark: rgba(0, 0, 0, .87),
    // context-doc-light: #fff,
    // context-autodoc-threshold: 70%,
    context: (
      plain: (
        base: rgba(35, 35, 35, 1),
        link: #42b983,
      ),
      light-grey: (
        base: #313131,
        link-weight: bold,
      ),
      "grey": (
        base: ui-get-palette(grey-darken-2),
        link-weight: bold,
      ),
      dark: (
        base: ui-get-palette(grey),
        link-weight: bold,
      ),
      darken: (
        base: ui-get-palette(grey-lighten-3),
        link-weight: bold,
      ),
      secondary: (
        base: #2c3e50,
        link-weight: bold,
      ),
      disabled: (
        base: rgba(255, 255, 255, .24),
      ),
      caption: (
        base: ui-get-palette(grey-lighten-2),
        link-weight: bold,
      ),
      light-mask: (
        base: rgba(255, 255, 255, .12),
        link-weight: bold,
      ),
      mask: (
        base: rgba(255, 255, 255, .2),
        link-weight: bold,
      ),
      deep-mask: (
        base: rgba(255, 255, 255, .7),
        link-weight: bold,
      ),
    ),
  ),
) !default;

// デフォルト以外の全てのテーマで未設定のキーをベーステーマで埋める
$ui-theme-base-map: map-get($ui-theme, $ui-theme-base);
$ui-theme-base-contexts: map-get($ui-theme-base-map, context);
@each $theme-key, $theme in $ui-theme {
  @if $theme-key != $ui-theme-base {
    @each $key, $value in $ui-theme-base-map {
      @if map-has-key($theme, $key) == false {
        $theme: ui-map-set($theme, $key, $value);
      } @else if $key == context {
        $my-contexts: map-get($theme, context);
        @each $context-key, $context in $ui-theme-base-contexts {
          @if map-has-key($my-contexts, $context-key) == false {
            $my-contexts: ui-map-set($my-contexts, $context-key, $context);
          }
        }
        $theme: ui-map-set($theme, context, $my-contexts);
      }
    }
  }
  $ui-theme: ui-map-set($ui-theme, $theme-key, $theme);
}

// テーマ色の未設定valueのデフォルト値を設定
@each $theme-key, $theme in $ui-theme {
  $contexts: map-get($theme, context);

  @each $context-key, $context in $contexts {
    $base-color: map-get($context, base);

    @if map-has-key($context, doc) == false {
      $base-lightness: lightness($base-color);
      $auto-color: if(
        $base-lightness < map-get($theme, context-autodoc-threshold),
        map-get($theme, context-doc-light),
        map-get($theme, context-doc-dark)
      );
      $context: ui-map-set($context, doc, $auto-color);
    }

    @if map-has-key($context, link) == false {
      $context: ui-map-set($context, link, map-get($context, doc));
    }

    @if map-has-key($context, link-hover-color) == false {
      $context: ui-map-set($context, linkHoverColor, map-get($context, link));
    }

    @if map-has-key($context, link-decoration) == false {
      $context: ui-map-set($context, linkDecoration, null);
    }

    @if map-has-key($context, link-hover-decoration) == false {
      $context: ui-map-set($context, linkHoverDecoration, null);
    }

    @if map-has-key($context, link-weight) == false {
      $context: ui-map-set($context, linkWeight, null);
    }

    @if map-has-key($context, text) == false {
      $context: ui-map-set($context, text, $base-color);
    }

    $contexts: ui-map-set($contexts, $context-key, $context);
  }
  $theme: ui-map-set($theme, context, $contexts);
  $ui-theme: ui-map-set($ui-theme, $theme-key, $theme);
}

$ui-theme-keys: map-keys($ui-theme);
$ui-theme-contexts: map-keys(map-get($ui-theme-base-map, context));
