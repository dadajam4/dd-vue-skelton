//
// Button
//

.#{$css-prefix}btn {
  $my-border-width: get-button(border-width);

  @mixin my-size($size) {
    min-width: get-button(min-width- + $size);
    @include font-size(get-button(font-size- + $size));
    $my-height: get-button(height- + $size);
    height: $my-height;
    line-height: $my-height - $my-border-width;
  }

  @mixin my-icon-size($size) {
    $my-size: get-button(height- + $size);
    width: $my-size;
    height: $my-size;
    line-height: $my-size - $my-border-width * 2;
    @include font-size(get-button(font-size- + $my-size));
  }

  @include btn-base($display: inline-flex);
  align-items: center;
  justify-content: center;
  flex: 0 1 auto;
  @include font-weight(regular);
  margin: get-button(margin-vertical) get-button(margin-horizontal);
  border-radius: get-button(radius);
  border: $my-border-width solid transparent;
  position: relative;
  transition: box-shadow get-transition(primary);
  // text-transform: uppercase;
  // @include theme-color(color, text-inverted);

  &:not(.#{$css-prefix}btn--depressed) {
    will-change: box-shadow;
    @include elevation(get-button(elevation));

    &:active {
      @include elevation(get-button(active-elevation));
    }
  }

  &--left,
  &--right {
    box-shadow: none !important;
  }

  &__content {
    &-wrapper {
      display: block;
      position: relative;
      // width: calc(100% - #{$my-border-width * 2});
      // height: calc(100% - #{$my-border-width * 2});
      width: 100%;
      // height: 100%;
      border-radius: inherit;
    }

    display: block;
    border-radius: inherit;
    padding: 0 get-button(padding-horizontal);
    white-space: nowrap;
    transition: get-transition(primary);
    user-select: none;

    &::first-letter {
      text-transform: uppercase;
    }
  }

  &__label {
    display: inline-block;

    &::first-letter {
      text-transform: uppercase;
    }
  }

  &:before {
    content: '';
    display: block;
    position: absolute;
    border-radius: inherit;
    color: inherit;
    left: -$my-border-width;
    top: -$my-border-width;
    width: calc(100% + #{$my-border-width * 2});
    height: calc(100% + #{$my-border-width * 2});
    opacity: .12;
    transition: get-duration(promptly);
  }

  &:hover,
  &:focus {
    &:before {
      background-color: currentColor;
    }
  }

  &:active {
    &:before {
      opacity: .24;
    }
  }

  // size
  @include my-size(md);
  @each $size in sm, lg {
    &--#{$size} {
      @include my-size($size);
    }
  }

  &--block {
    display: flex;
    width: 100%;
    // max-width: calc(100% - #{get-button(margin-horizontal) * 2});
    margin-left: 0;
    margin-right: 0;
  }

  &--icon {
    // background: transparent;
    // box-shadow: none!important;
    border-radius: 50%;
    justify-content: center;
    min-width: 0 !important;

    .#{$css-prefix}btn__content {
      padding: 0;
    }

    @include my-icon-size(md);
    @each $size in sm, lg {
      &.#{$css-prefix}btn--#{$size} {
        @include my-icon-size($size);
      }
    }

    .#{$css-prefix}icon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }
  }

  // includes icon
  &__content .#{$css-prefix}icon {
    color: inherit;
    // display: inline-flex;
    // align-items: center;
    // justify-content: center;
    // vertical-align: bottom;

    &--left {
      margin-right: get-button(icon-margin);
    }

    &--right {
      margin-left: get-button(icon-margin);
    }
  }

  &#{&}--disabled {
    @include theme-color(color, context-muted-text, true);
    pointer-events: none;

    // &:not(.#{$css-prefix}btn--icon) {
    //   @include theme-color(background-color, context-muted, true);
    //   @include theme-color(border-color, context-muted-border, true);
    // }
  }

  &--hidden {
    visibility: hidden !important;
  }

  &--left,
  &--right {
    min-width: 50px;
  }

  &--left {
    border-radius: get-button(radius) 0 0 get-button(radius);
    // border-top-right-radius: 0;
    // border-bottom-right-radius: 0;
  }

  &--right {
    border-radius: 0 get-button(radius) get-button(radius) 0;
    // border-top-left-radius: 0;
    // border-bottom-left-radius: 0;
  }



  // loader
  &--loading {
    pointer-events: none;

    .#{$css-prefix}btn__content {
      opacity: 0;
    }
  }

  &__loading {
    align-items: center;
    display: flex;
    height: 100%;
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;

    .#{$css-prefix}icon {

      &--left {
        margin-right: 1rem;
        line-height: inherit;
      }

      &--right {
        margin-left: 1rem;
        line-height: inherit;
      }
    }
  }
}
