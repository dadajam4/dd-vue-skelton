//
// Switch
//

.#{$css-prefix}switch {
  $my: &;

  &__faux {
    $my-size: get-switch(pointer-size) + get-switch(pointer-assist-size) * 2;
    $my-offset-x: -(get-switch(pointer-offset) + get-switch(pointer-assist-size));
    $my-offset-x-active: get-switch(track-min-width) - $my-size - $my-offset-x;
    $my-offset-y: -$my-size / 2 + get-switch(track-height) / 2;

    position: relative;
    display: block;
    min-width: get-switch(track-min-width);
    min-height: get-switch(track-height);
    border-radius: get-switch(track-radius);
    @include btn-action-reset;
    cursor: pointer;

    &:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      opacity: .5;
      background-color: currentColor;
      transition: .3s get-easing(fast-in-fast-out);
    }

    &__body {
      @include btn-action-reset;
      position: absolute;
      display: block;
      @include square($my-size);
      top: 0;
      left: 0;
      transform: translate(#{$my-offset-x}, #{$my-offset-y});
      transition: .3s get-easing(fast-in-fast-out);

      &:after {
        content: "";
        position: absolute;
        display: block;
        @include square(get-switch(pointer-size));
        top: $my-size / 2 - get-switch(pointer-size) / 2;
        left: $my-size / 2 - get-switch(pointer-size) / 2;
        border-radius: 100%;
        @include elevation(4);
        background-color: currentColor;
      }
    }

    &:not(&--active) {
      &:before {
        @include theme-color(background-color, switch-track);
      }

      #{$my}__faux__body {
        &:after {
          @include theme-color(background-color, switch-pointer);
        }
      }
    }

    &--active {
      @include theme-color(color, context-primary);

      #{$my}__faux__body {
        transform: translate(#{$my-offset-x-active}, #{$my-offset-y});
      }
    }
  }

  &.#{$css-prefix}input-group--disabled &__faux {
    &:before {
      @include theme-color(background-color, context-grey, true);
    }

    #{$my}__faux__body {
      &:after {
        @include theme-color(background-color, context-grey, true);
      }
    }
  }
}
